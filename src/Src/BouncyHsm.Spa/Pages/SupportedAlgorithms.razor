@page "/SupportedAlgorithms"
@using BouncyHsm.Client
@using BouncyHsm.Spa.Shared.ForSupportedAlgorithms
@inject IBouncyHsmClient bouncyHsmClient

<PageTitle>Supported algorithms</PageTitle>

<h1>Supported algorithms</h1>

<p>List with actual supported mechanisms and eliptic curves.</p>

<h2>Mechanisms</h2>

@if (this.mechanisms == null)
{
    <BouncyHsm.Spa.Shared.Common.LoadingIndicator />
}
else
{
    @if (this.profileName != null)
    {
        <div class="alert @* alert-success *@ alert alert-warning mt-1 mb-3" role="alert">
            <h4 class="alert-heading">Profile: @this.profileName</h4>
            <p>
                The list of supported mechanisms and named eliptic curves was modified using the configuration in the <strong>@this.profileName</strong> profile.<br />
                If you want to use <a href="https://github.com/harrison314/BouncyHsm/blob/main/Doc/SuportedAlgorithms.md" target="_blank">all mechanisms and named eliptic curves</a> provided by BouncyHsm, disable the profile in the configuration.
            </p>
        </div>
    }

    <p>
        Supported mechanisms are by default for PKCS#11 specification <a href="https://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/os/pkcs11-curr-v2.40-os.pdf" target="_blank">version 2.40</a>,
        and native APIs are also used for it.
        Bouncy&nbsp;Hsm allows the use of some mechanisms from PKCS#11 specification <a href="https://docs.oasis-open.org/pkcs11/pkcs11-curr/v3.0/pkcs11-curr-v3.0.pdf" target="_blank">version 3.0</a>
    </p>

    <table class="table table-responsive-md table-striped table-bordered">
        <thead>
            <tr>
                <th>Mechanism</th>
                <th>Min. key size</th>
                <th>Max. key size</th>
                <th>Digest</th>
                <th>Sign, Verify</th>
                <th>SignRecover, VerifyRecover</th>
                <th>Derive</th>
                <th>Encrypt, Decrypt</th>
                <th>Generate key pair</th>
                <th>Generate key</th>
                <th>Wrap, Unwrap</th>
            </tr>
        </thead>
        <tbody>
            @foreach (MechanismInfoDto mi in this.mechanisms)
            {
                <tr>
                    <td class="code">@mi.MechanismType <Pkcs11Version Version="@mi.SpecificationVersion" /></td>
                    <td class="text-end">@mi.MinKeySize</td>
                    <td class="text-end">@mi.MaxKeySize</td>
                    <td class="text-center" title="Digest">@ShowFlag(mi.Flags.Digest)</td>
                    <td class="text-center" title="Sign, Verify">@ShowFlag(mi.Flags.Sign, mi.Flags.Verify)</td>
                    <td class="text-center" title="SignRecover, VerifyRecover">@ShowFlag(mi.Flags.SignRecover, mi.Flags.VerifyRecover)</td>
                    <td class="text-center" title="Derive">@ShowFlag(mi.Flags.Derive)</td>
                    <td class="text-center" title="Encrypt, Decrypt">@ShowFlag(mi.Flags.Encrypt, mi.Flags.Decrypt)</td>
                    <td class="text-center" title="Generate key pair">@ShowFlag(mi.Flags.GenerateKeyPair)</td>
                    <td class="text-center" title="Generate key">@ShowFlag(mi.Flags.Generate)</td>
                    <td class="text-center" title="Wrap, Unwrap">@ShowFlag(mi.Flags.Wrap, mi.Flags.Unwrap)</td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Elliptic curves</h2>

    @if (this.curves == null)
    {
        <BouncyHsm.Spa.Shared.Common.LoadingIndicator />
    }
    else
    {
        <table class="table table-responsive-md table-striped table-bordered">
            <thead>
                <tr>
                    <th>Kind</th>
                    <th>Curve</th>
                    <th>OID</th>
                </tr>
            </thead>
            <tbody>
                @foreach (CurveInfoDto cr in this.curves)
                {
                    <tr>
                        <td>@cr.Kind</td>
                        <td>@cr.Name</td>
                        <td class="fst-italic">@cr.Oid</td>
                    </tr>
                }
            </tbody>
        </table>


        <h2>Edwards curves</h2>
        @if (this.edwardsCurves == null)
        {
            <BouncyHsm.Spa.Shared.Common.LoadingIndicator />
        }
        else
        {
            <table class="table table-responsive-md table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Kind</th>
                        <th>Curve</th>
                        <th>Curve Name</th>
                        <th>OID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (CurveInfoDto cr in this.edwardsCurves)
                    {
                        <tr>
                            <td>@cr.Kind</td>
                            <td>@cr.Name</td>
                            <td class="fst-italic">@cr.NamedCurve</td>
                            <td class="fst-italic">@cr.Oid</td>
                        </tr>
                    }
                </tbody>
            </table>

            <h2>Montgomery curves</h2>
            @if (this.montgomeryCurves == null)
            {
                <BouncyHsm.Spa.Shared.Common.LoadingIndicator />
            }
            else
            {
                <table class="table table-responsive-md table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Kind</th>
                            <th>Curve</th>
                            <th>Curve Name</th>
                            <th>OID</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (CurveInfoDto cr in this.montgomeryCurves)
                        {
                            <tr>
                                <td>@cr.Kind</td>
                                <td>@cr.Name</td>
                                <td class="fst-italic">@cr.NamedCurve</td>
                                <td class="fst-italic">@cr.Oid</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
    }
}

@code {
    private IList<MechanismInfoDto>? mechanisms = null;
    private string? profileName = null;
    private IList<CurveInfoDto>? curves = null;
    private IList<CurveInfoDto>? edwardsCurves = null;
    private IList<CurveInfoDto>? montgomeryCurves = null;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1);
        MechanismProfileDto profileInfo = await this.bouncyHsmClient.GetMechanismAsync();
        this.mechanisms = profileInfo.Mechanisms.ToList();
        this.profileName = profileInfo.ProfileName;

        await Task.Yield();
        this.curves = await this.bouncyHsmClient.GetSupportedEcCurvesAsync();

        await Task.Yield();
        this.edwardsCurves = await this.bouncyHsmClient.GetSupportedEdwardsCurvesAsync();

        await Task.Yield();
        this.montgomeryCurves = await this.bouncyHsmClient.GetSupportedMontgomeryCurvesAsync();
    }

    private string ShowFlag(bool enabled)
    {
        return enabled ? "✓" : " ";
    }

    private string ShowFlag(bool op1, bool op2)
    {
        return (op1, op2) switch
        {
            (false, false) => " ",
            (false, true) => "-",
            (true, false) => "-",
            (true, true) => "✓"
        };
    }

}