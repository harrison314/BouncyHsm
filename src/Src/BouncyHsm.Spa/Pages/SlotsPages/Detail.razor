@page "/Slots/Detail/{Id:int}"
@using BouncyHsm.Spa.Services.Client
@inject IBouncyHsmClient bouncyHsmClient

<PageTitle>Slot detail</PageTitle>

<h1>Slot detail</h1>

<div class="d-flex justify-content-end pb-3">
    <button type="button" class="btn btn-outline-primary" @onclick="ReloadObjects"><span class="icon-Recurring-Appointment icon-1x"></span> Reload</button>
</div>

<p>The following is a list of all the objects stored in the token.</p>

@if (this.storageObjectList == null)
{
    <BouncyHsm.Spa.Shared.Common.LoadingIndicator />
}
else
{
    @foreach (var obj in this.storageObjectList.Objects)
    {
        <div class="card mb-2">
            <div class="card-header">
                @obj.Description
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between">

                    @*<div class="row">*@
                    <div class="col-1 d-flex align-items-center">
                        <div class="align-self-center">
                            <span class="@(GetIconClass(obj.Type)) icon-4x"></span>
                        </div>
                    </div>

                    <div class="col-9">
                        <table class="table table-borderless table-sm">
                            <tbody>
                                <tr>
                                    <td>Type:</td>
                                    <td>@obj.Type</td>
                                </tr>
                                <tr>
                                    <td>CkLabel:</td>
                                    <td>@obj.CkLabel</td>
                                </tr>
                                <tr>
                                    <td>CkId (HEX):</td>
                                    <td>@obj.CkIdHex</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="col-2">
                        <NavLink href="@($"/Slots/Detail/{this.Id}/object/{obj.Id}")" class="btn btn-outline-primary"><span class="icon-zoom-in icon-1x"></span> Detail</NavLink>
                    </div>
                    @*</div>*@

                </div>
            </div>
        </div>
    }
}

@code {
    private StorageObjectsListDto? storageObjectList = null;

    [Parameter]
    public int Id
    {
        get;
        set;
    }

    protected override async Task OnParametersSetAsync()
    {
        this.storageObjectList = await this.bouncyHsmClient.GetStorageObjectsAsync(this.Id, null, null);
    }

    private async Task ReloadObjects()
    {
        this.storageObjectList = null;
        await Task.Yield();
        this.storageObjectList = await this.bouncyHsmClient.GetStorageObjectsAsync(this.Id, null, null);
    }

    private string GetIconClass(CKO cko)
    {
        return cko switch
        {
            CKO.CKO_CERTIFICATE => "icon-file-text2",
            CKO.CKO_DATA => "icon-drive",
            CKO.CKO_DOMAIN_PARAMETERS => "icon-Integrated-Circuit",
            CKO.CKO_HW_FEATURE => "icon-Integrated-Circuit",
            CKO.CKO_MECHANISM => "icon-Integrated-Circuit",
            CKO.CKO_OTP_KEY => "icon-Integrated-Circuit",
            CKO.CKO_PRIVATE_KEY => "icon-Key-Security",
            CKO.CKO_PUBLIC_KEY => "icon-unlocked",
            CKO.CKO_SECRET_KEY => "icon-Privacy",
            CKO.CKO_VENDOR_DEFINED => "icon-Integrated-Circuit",
            _ => throw new InvalidProgramException()
        };
    }
}
