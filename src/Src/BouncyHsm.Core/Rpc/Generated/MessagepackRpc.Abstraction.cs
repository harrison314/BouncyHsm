//----------------------
// <auto-generated>
//     Generated by the BouncyHsm.RpcGenerator
//     source: RpcDefinition.yaml
// </auto-generated>
//----------------------

using System;
using System.Collections.Generic;
using System.Linq;
using MessagePack;

namespace BouncyHsm.Core.Rpc;

#nullable enable

public partial interface IRpcRequest
{
}

public partial interface IRpcResponse
{
}

public interface IRpcRequestHandler<TRequest, TResponse>
{
    Task<TResponse> Handle(TRequest request, CancellationToken cancellationToken);
}

public struct PipelineContext
{
   public string OperationName
   {
      get;
   }

   public string? RequestId
   {
     get;
   }

   public Type HandlerType
   {
      get;
   }

   public CancellationToken RequestCancelled
   {
     get;
   }

   public PipelineContext(string operationName, string? requestId, Type handlerType, CancellationToken requestCancelled)
   {
      this.OperationName = operationName;
      this.RequestId = requestId;
      this.HandlerType = handlerType;
      this.RequestCancelled = requestCancelled;
   }
}

public interface IRpcPipeline<TRequest, TResponse>
{
    Task<TResponse> Process(PipelineContext context, TRequest request, Func<TRequest, Task<TResponse>> next);
}

