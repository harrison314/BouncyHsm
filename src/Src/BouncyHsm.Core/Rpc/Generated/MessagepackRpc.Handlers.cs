//----------------------
// <auto-generated>
//     Generated by the BouncyHsm.RpcGenerator
//     source: RpcDefinition.yaml
// </auto-generated>
//----------------------

using System;
using System.Collections.Generic;
using System.Linq;
using BouncyHsm.Core.Rpc;

// https://github.com/neuecc/MessagePack-CSharp

namespace BouncyHsm.Core.Services.P11Handlers;

#nullable enable

public partial class PingHandler : IRpcRequestHandler<PingRequest, PingEnvelope>
{
   // Implement in another class
}

public partial class InitializeHandler : IRpcRequestHandler<InitializeRequest, InitializeEnvelope>
{
   // Implement in another class
}

public partial class FinalizeHandler : IRpcRequestHandler<FinalizeRequest, FinalizeEnvelope>
{
   // Implement in another class
}

public partial class GetInfoHandler : IRpcRequestHandler<GetInfoRequest, GetInfoEnvelope>
{
   // Implement in another class
}

public partial class GetSlotListHandler : IRpcRequestHandler<GetSlotListRequest, GetSlotListEnvelope>
{
   // Implement in another class
}

public partial class GetSlotInfoHandler : IRpcRequestHandler<GetSlotInfoRequest, GetSlotInfoEnvelope>
{
   // Implement in another class
}

public partial class GetTokenInfoHandler : IRpcRequestHandler<GetTokenInfoRequest, GetTokenInfoEnvelope>
{
   // Implement in another class
}

public partial class GetMechanismListHandler : IRpcRequestHandler<GetMechanismListRequest, GetMechanismListEnvelope>
{
   // Implement in another class
}

public partial class GetMechanismInfoHandler : IRpcRequestHandler<GetMechanismInfoRequest, GetMechanismInfoEnvelope>
{
   // Implement in another class
}

public partial class OpenSessionHandler : IRpcRequestHandler<OpenSessionRequest, OpenSessionEnvelope>
{
   // Implement in another class
}

public partial class CloseSessionHandler : IRpcRequestHandler<CloseSessionRequest, CloseSessionEnvelope>
{
   // Implement in another class
}

public partial class CloseAllSessionsHandler : IRpcRequestHandler<CloseAllSessionsRequest, CloseAllSessionsEnvelope>
{
   // Implement in another class
}

public partial class GetSessionInfoHandler : IRpcRequestHandler<GetSessionInfoRequest, GetSessionInfoEnvelope>
{
   // Implement in another class
}

public partial class LoginHandler : IRpcRequestHandler<LoginRequest, LoginEnvelope>
{
   // Implement in another class
}

public partial class LogoutHandler : IRpcRequestHandler<LogoutRequest, LogoutEnvelope>
{
   // Implement in another class
}

public partial class SeedRandomHandler : IRpcRequestHandler<SeedRandomRequest, SeedRandomEnvelope>
{
   // Implement in another class
}

public partial class GenerateRandomHandler : IRpcRequestHandler<GenerateRandomRequest, GenerateRandomEnvelope>
{
   // Implement in another class
}

public partial class DigestInitHandler : IRpcRequestHandler<DigestInitRequest, DigestInitEnvelope>
{
   // Implement in another class
}

public partial class DigestHandler : IRpcRequestHandler<DigestRequest, DigestEnvelope>
{
   // Implement in another class
}

public partial class DigestUpdateHandler : IRpcRequestHandler<DigestUpdateRequest, DigestUpdateEnvelope>
{
   // Implement in another class
}

public partial class DigestKeyHandler : IRpcRequestHandler<DigestKeyRequest, DigestKeyEnvelope>
{
   // Implement in another class
}

public partial class DigestFinalHandler : IRpcRequestHandler<DigestFinalRequest, DigestFinalEnvelope>
{
   // Implement in another class
}

public partial class CreateObjectHandler : IRpcRequestHandler<CreateObjectRequest, CreateObjectEnvelope>
{
   // Implement in another class
}

public partial class DestroyObjectHandler : IRpcRequestHandler<DestroyObjectRequest, DestroyObjectEnvelope>
{
   // Implement in another class
}

public partial class FindObjectsInitHandler : IRpcRequestHandler<FindObjectsInitRequest, FindObjectsInitEnvelope>
{
   // Implement in another class
}

public partial class FindObjectsHandler : IRpcRequestHandler<FindObjectsRequest, FindObjectsEnvelope>
{
   // Implement in another class
}

public partial class FindObjectsFinalHandler : IRpcRequestHandler<FindObjectsFinalRequest, FindObjectsFinalEnvelope>
{
   // Implement in another class
}

public partial class GetObjectSizeHandler : IRpcRequestHandler<GetObjectSizeRequest, GetObjectSizeEnvelope>
{
   // Implement in another class
}

public partial class GetAttributeValueHandler : IRpcRequestHandler<GetAttributeValueRequest, GetAttributeValueEnvelope>
{
   // Implement in another class
}

public partial class GenerateKeyPairHandler : IRpcRequestHandler<GenerateKeyPairRequest, GenerateKeyPairEnvelope>
{
   // Implement in another class
}

public partial class SignInitHandler : IRpcRequestHandler<SignInitRequest, SignInitEnvelope>
{
   // Implement in another class
}

public partial class SignHandler : IRpcRequestHandler<SignRequest, SignEnvelope>
{
   // Implement in another class
}

public partial class SignUpdateHandler : IRpcRequestHandler<SignUpdateRequest, SignUpdateEnvelope>
{
   // Implement in another class
}

public partial class SignFinalHandler : IRpcRequestHandler<SignFinalRequest, SignFinalEnvelope>
{
   // Implement in another class
}

public partial class VerifyInitHandler : IRpcRequestHandler<VerifyInitRequest, VerifyInitEnvelope>
{
   // Implement in another class
}

public partial class VerifyHandler : IRpcRequestHandler<VerifyRequest, VerifyEnvelope>
{
   // Implement in another class
}

public partial class VerifyUpdateHandler : IRpcRequestHandler<VerifyUpdateRequest, VerifyUpdateEnvelope>
{
   // Implement in another class
}

public partial class VerifyFinalHandler : IRpcRequestHandler<VerifyFinalRequest, VerifyFinalEnvelope>
{
   // Implement in another class
}

public partial class GenerateKeyHandler : IRpcRequestHandler<GenerateKeyRequest, GenerateKeyEnvelope>
{
   // Implement in another class
}

public partial class DeriveKeyHandler : IRpcRequestHandler<DeriveKeyRequest, DeriveKeyEnvelope>
{
   // Implement in another class
}

public partial class EncryptInitHandler : IRpcRequestHandler<EncryptInitRequest, EncryptInitEnvelope>
{
   // Implement in another class
}

public partial class EncryptHandler : IRpcRequestHandler<EncryptRequest, EncryptEnvelope>
{
   // Implement in another class
}

public partial class EncryptUpdateHandler : IRpcRequestHandler<EncryptUpdateRequest, EncryptUpdateEnvelope>
{
   // Implement in another class
}

public partial class EncryptFinalHandler : IRpcRequestHandler<EncryptFinalRequest, EncryptFinalEnvelope>
{
   // Implement in another class
}

[System.CodeDom.Compiler.GeneratedCode("BouncyHsm.RpcGenerator.Generators", "1.0.0")]
public static partial class RpcDefinitionUtils
{

   public static IReadOnlyDictionary<Type, Type> GetRegistrations()
   {

      return new Dictionary<Type, Type>()
      {
         { typeof(IRpcRequestHandler<PingRequest, PingEnvelope>), typeof(PingHandler)},
         { typeof(IRpcRequestHandler<InitializeRequest, InitializeEnvelope>), typeof(InitializeHandler)},
         { typeof(IRpcRequestHandler<FinalizeRequest, FinalizeEnvelope>), typeof(FinalizeHandler)},
         { typeof(IRpcRequestHandler<GetInfoRequest, GetInfoEnvelope>), typeof(GetInfoHandler)},
         { typeof(IRpcRequestHandler<GetSlotListRequest, GetSlotListEnvelope>), typeof(GetSlotListHandler)},
         { typeof(IRpcRequestHandler<GetSlotInfoRequest, GetSlotInfoEnvelope>), typeof(GetSlotInfoHandler)},
         { typeof(IRpcRequestHandler<GetTokenInfoRequest, GetTokenInfoEnvelope>), typeof(GetTokenInfoHandler)},
         { typeof(IRpcRequestHandler<GetMechanismListRequest, GetMechanismListEnvelope>), typeof(GetMechanismListHandler)},
         { typeof(IRpcRequestHandler<GetMechanismInfoRequest, GetMechanismInfoEnvelope>), typeof(GetMechanismInfoHandler)},
         { typeof(IRpcRequestHandler<OpenSessionRequest, OpenSessionEnvelope>), typeof(OpenSessionHandler)},
         { typeof(IRpcRequestHandler<CloseSessionRequest, CloseSessionEnvelope>), typeof(CloseSessionHandler)},
         { typeof(IRpcRequestHandler<CloseAllSessionsRequest, CloseAllSessionsEnvelope>), typeof(CloseAllSessionsHandler)},
         { typeof(IRpcRequestHandler<GetSessionInfoRequest, GetSessionInfoEnvelope>), typeof(GetSessionInfoHandler)},
         { typeof(IRpcRequestHandler<LoginRequest, LoginEnvelope>), typeof(LoginHandler)},
         { typeof(IRpcRequestHandler<LogoutRequest, LogoutEnvelope>), typeof(LogoutHandler)},
         { typeof(IRpcRequestHandler<SeedRandomRequest, SeedRandomEnvelope>), typeof(SeedRandomHandler)},
         { typeof(IRpcRequestHandler<GenerateRandomRequest, GenerateRandomEnvelope>), typeof(GenerateRandomHandler)},
         { typeof(IRpcRequestHandler<DigestInitRequest, DigestInitEnvelope>), typeof(DigestInitHandler)},
         { typeof(IRpcRequestHandler<DigestRequest, DigestEnvelope>), typeof(DigestHandler)},
         { typeof(IRpcRequestHandler<DigestUpdateRequest, DigestUpdateEnvelope>), typeof(DigestUpdateHandler)},
         { typeof(IRpcRequestHandler<DigestKeyRequest, DigestKeyEnvelope>), typeof(DigestKeyHandler)},
         { typeof(IRpcRequestHandler<DigestFinalRequest, DigestFinalEnvelope>), typeof(DigestFinalHandler)},
         { typeof(IRpcRequestHandler<CreateObjectRequest, CreateObjectEnvelope>), typeof(CreateObjectHandler)},
         { typeof(IRpcRequestHandler<DestroyObjectRequest, DestroyObjectEnvelope>), typeof(DestroyObjectHandler)},
         { typeof(IRpcRequestHandler<FindObjectsInitRequest, FindObjectsInitEnvelope>), typeof(FindObjectsInitHandler)},
         { typeof(IRpcRequestHandler<FindObjectsRequest, FindObjectsEnvelope>), typeof(FindObjectsHandler)},
         { typeof(IRpcRequestHandler<FindObjectsFinalRequest, FindObjectsFinalEnvelope>), typeof(FindObjectsFinalHandler)},
         { typeof(IRpcRequestHandler<GetObjectSizeRequest, GetObjectSizeEnvelope>), typeof(GetObjectSizeHandler)},
         { typeof(IRpcRequestHandler<GetAttributeValueRequest, GetAttributeValueEnvelope>), typeof(GetAttributeValueHandler)},
         { typeof(IRpcRequestHandler<GenerateKeyPairRequest, GenerateKeyPairEnvelope>), typeof(GenerateKeyPairHandler)},
         { typeof(IRpcRequestHandler<SignInitRequest, SignInitEnvelope>), typeof(SignInitHandler)},
         { typeof(IRpcRequestHandler<SignRequest, SignEnvelope>), typeof(SignHandler)},
         { typeof(IRpcRequestHandler<SignUpdateRequest, SignUpdateEnvelope>), typeof(SignUpdateHandler)},
         { typeof(IRpcRequestHandler<SignFinalRequest, SignFinalEnvelope>), typeof(SignFinalHandler)},
         { typeof(IRpcRequestHandler<VerifyInitRequest, VerifyInitEnvelope>), typeof(VerifyInitHandler)},
         { typeof(IRpcRequestHandler<VerifyRequest, VerifyEnvelope>), typeof(VerifyHandler)},
         { typeof(IRpcRequestHandler<VerifyUpdateRequest, VerifyUpdateEnvelope>), typeof(VerifyUpdateHandler)},
         { typeof(IRpcRequestHandler<VerifyFinalRequest, VerifyFinalEnvelope>), typeof(VerifyFinalHandler)},
         { typeof(IRpcRequestHandler<GenerateKeyRequest, GenerateKeyEnvelope>), typeof(GenerateKeyHandler)},
         { typeof(IRpcRequestHandler<DeriveKeyRequest, DeriveKeyEnvelope>), typeof(DeriveKeyHandler)},
         { typeof(IRpcRequestHandler<EncryptInitRequest, EncryptInitEnvelope>), typeof(EncryptInitHandler)},
         { typeof(IRpcRequestHandler<EncryptRequest, EncryptEnvelope>), typeof(EncryptHandler)},
         { typeof(IRpcRequestHandler<EncryptUpdateRequest, EncryptUpdateEnvelope>), typeof(EncryptUpdateHandler)},
         { typeof(IRpcRequestHandler<EncryptFinalRequest, EncryptFinalEnvelope>), typeof(EncryptFinalHandler)},
       };
    }
}
